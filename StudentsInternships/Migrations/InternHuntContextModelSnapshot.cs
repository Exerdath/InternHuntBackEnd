// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsInternships.Data;

namespace StudentsInternships.Migrations
{
    [DbContext(typeof(InternHuntContext))]
    partial class InternHuntContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("StudentsInternships.Data.Entities.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InternshipId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StudentUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApplicationId");

                    b.HasIndex("InternshipId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            ApplicationId = 1,
                            InternshipId = 1,
                            StudentUserId = 1
                        },
                        new
                        {
                            ApplicationId = 2,
                            InternshipId = 2,
                            StudentUserId = 1
                        },
                        new
                        {
                            ApplicationId = 3,
                            InternshipId = 3,
                            StudentUserId = 2
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Cluj"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Brasov"
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Bucuresti"
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Cv", b =>
                {
                    b.Property<int>("CvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CvId");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Cvs");

                    b.HasData(
                        new
                        {
                            CvId = 1,
                            ApplicationId = 1,
                            FileLocation = "Not important now",
                            StudentId = 1
                        },
                        new
                        {
                            CvId = 2,
                            ApplicationId = 2,
                            FileLocation = "Still not important now",
                            StudentId = 2
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Internship", b =>
                {
                    b.Property<int>("InternshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InternshipDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("InternshipName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TechnologyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InternshipId");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyUserId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Internships");

                    b.HasData(
                        new
                        {
                            InternshipId = 1,
                            CityId = 1,
                            InternshipDescription = "Microsoft 1 Internship",
                            InternshipName = "M1 Internship",
                            TechnologyId = 1
                        },
                        new
                        {
                            InternshipId = 2,
                            CityId = 2,
                            InternshipDescription = "Microsoft 2 Internship",
                            InternshipName = "M2 Internship",
                            TechnologyId = 2
                        },
                        new
                        {
                            InternshipId = 3,
                            CityId = 3,
                            InternshipDescription = "Apple 1 Internship",
                            InternshipName = "A1 Internship",
                            TechnologyId = 3
                        },
                        new
                        {
                            InternshipId = 4,
                            CityId = 1,
                            InternshipDescription = "Apple 2 Internship",
                            InternshipName = "A2 Internship",
                            TechnologyId = 4
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Interest")
                        .HasColumnType("TEXT");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = 1,
                            Interest = ".Net"
                        },
                        new
                        {
                            TechnologyId = 2,
                            Interest = "React"
                        },
                        new
                        {
                            TechnologyId = 3,
                            Interest = "Java"
                        },
                        new
                        {
                            TechnologyId = 4,
                            Interest = "Javascript"
                        },
                        new
                        {
                            TechnologyId = 5,
                            Interest = "Python"
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Company", b =>
                {
                    b.HasBaseType("StudentsInternships.Data.Entities.User");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Company");

                    b.HasData(
                        new
                        {
                            UserId = 6,
                            Password = "microsoft",
                            Username = "Microsoft",
                            CompanyDescription = "Microsoft company"
                        },
                        new
                        {
                            UserId = 7,
                            Password = "apple",
                            Username = "Apple",
                            CompanyDescription = "Apple company"
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Student", b =>
                {
                    b.HasBaseType("StudentsInternships.Data.Entities.User");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TechnologyId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("CityId");

                    b.HasIndex("TechnologyId");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "ent",
                            Username = "Stud",
                            CityId = 1,
                            TechnologyId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Password = "dent",
                            Username = "Stu",
                            CityId = 2,
                            TechnologyId = 1
                        },
                        new
                        {
                            UserId = 3,
                            Password = "udent",
                            Username = "St",
                            CityId = 2,
                            TechnologyId = 2
                        },
                        new
                        {
                            UserId = 4,
                            Password = "tudent",
                            Username = "S",
                            CityId = 3,
                            TechnologyId = 3
                        });
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Application", b =>
                {
                    b.HasOne("StudentsInternships.Data.Entities.Internship", "Internship")
                        .WithMany("Applications")
                        .HasForeignKey("InternshipId");

                    b.HasOne("StudentsInternships.Data.Entities.Student", "Student")
                        .WithMany("Applications")
                        .HasForeignKey("StudentUserId");
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Cv", b =>
                {
                    b.HasOne("StudentsInternships.Data.Entities.Application", "Application")
                        .WithOne("Cv")
                        .HasForeignKey("StudentsInternships.Data.Entities.Cv", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentsInternships.Data.Entities.Student", "Student")
                        .WithOne("Cv")
                        .HasForeignKey("StudentsInternships.Data.Entities.Cv", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Internship", b =>
                {
                    b.HasOne("StudentsInternships.Data.Entities.City", "City")
                        .WithMany("Internships")
                        .HasForeignKey("CityId");

                    b.HasOne("StudentsInternships.Data.Entities.Company", "Company")
                        .WithMany("Interships")
                        .HasForeignKey("CompanyUserId");

                    b.HasOne("StudentsInternships.Data.Entities.Technology", "Technology")
                        .WithMany("Internships")
                        .HasForeignKey("TechnologyId");
                });

            modelBuilder.Entity("StudentsInternships.Data.Entities.Student", b =>
                {
                    b.HasOne("StudentsInternships.Data.Entities.City", "City")
                        .WithMany("Students")
                        .HasForeignKey("CityId");

                    b.HasOne("StudentsInternships.Data.Entities.Technology", "Technology")
                        .WithMany("Students")
                        .HasForeignKey("TechnologyId");
                });
#pragma warning restore 612, 618
        }
    }
}
